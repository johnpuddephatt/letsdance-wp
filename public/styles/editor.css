@charset "UTF-8";
/*
! tailwindcss v3.3.2 | MIT License | https://tailwindcss.com
*/
/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/
*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}
::before,
::after {
  --tw-content: '';
}
/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/
html {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: Karla, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
}
/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/
body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}
/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/
hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}
/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}
/*
Remove the default font size and weight for headings.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
/*
Reset links to optimize for opt-in styling instead of opt-out.
*/
a {
  color: inherit;
  text-decoration: inherit;
}
/*
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder;
}
/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-size: 1em; /* 2 */
}
/*
Add the correct font size in all browsers.
*/
small {
  font-size: 80%;
}
/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/
table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}
/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}
/*
Remove the inheritance of text transform in Edge and Firefox.
*/
button,
select {
  text-transform: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}
/*
Use the modern Firefox focus style for all focusable elements.
*/
:-moz-focusring {
  outline: auto;
}
/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/
:-moz-ui-invalid {
  box-shadow: none;
}
/*
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline;
}
/*
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}
/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}
/*
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}
/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item;
}
/*
Removes the default spacing and border for appropriate elements.
*/
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}
fieldset {
  margin: 0;
  padding: 0;
}
legend {
  padding: 0;
}
ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}
/*
Prevent resizing textareas horizontally by default.
*/
textarea {
  resize: vertical;
}
/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/
input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
/*
Set the default cursor for buttons.
*/
button,
[role="button"] {
  cursor: pointer;
}
/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}
/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}
/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/
img,
video {
  max-width: 100%;
  height: auto;
}
/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}
*, ::before, ::after{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
::-webkit-backdrop{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
::backdrop{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
.container{
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: 0.75rem;
  padding-left: 0.75rem;
}
@media (min-width: 640px){
  .container{
    max-width: 640px;
    padding-right: 1.5rem;
    padding-left: 1.5rem;
  }
}
@media (min-width: 768px){
  .container{
    max-width: 768px;
  }
}
@media (min-width: 1024px){
  .container{
    max-width: 1024px;
    padding-right: 2rem;
    padding-left: 2rem;
  }
}
@media (min-width: 1280px){
  .container{
    max-width: 1280px;
    padding-right: 2.5rem;
    padding-left: 2.5rem;
  }
}
@media (min-width: 1536px){
  .container{
    max-width: 1536px;
    padding-right: 3rem;
    padding-left: 3rem;
  }
}
.prose{
  color: var(--tw-prose-body);
  max-width: 65ch;
}
.prose :where(p):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}
.prose :where(strong):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.prose :where(a strong):not(:where([class~="not-prose"] *)){
  color: inherit;
}
.prose :where(blockquote strong):not(:where([class~="not-prose"] *)){
  color: inherit;
}
.prose :where(thead th strong):not(:where([class~="not-prose"] *)){
  color: inherit;
}
.prose :where(ol):not(:where([class~="not-prose"] *)){
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}
.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-alpha;
}
.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-alpha;
}
.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-roman;
}
.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-roman;
}
.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-roman;
}
.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-roman;
}
.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)){
  list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"] *)){
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}
.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker{
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker{
  color: var(--tw-prose-bullets);
}
.prose :where(hr):not(:where([class~="not-prose"] *)){
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before{
  content: open-quote;
}
.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after{
  content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 400;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
  font-family: Miller Display, ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
}
.prose :where(h1 strong):not(:where([class~="not-prose"] *)){
  font-weight: 900;
  color: inherit;
}
.prose :where(h2):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.prose :where(h2 strong):not(:where([class~="not-prose"] *)){
  font-weight: 800;
  color: inherit;
}
.prose :where(h3):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.prose :where(h3 strong):not(:where([class~="not-prose"] *)){
  font-weight: 700;
  color: inherit;
}
.prose :where(h4):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.prose :where(h4 strong):not(:where([class~="not-prose"] *)){
  font-weight: 700;
  color: inherit;
}
.prose :where(img):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(figure > *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.prose :where(code):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.prose :where(code):not(:where([class~="not-prose"] *))::before{
  content: "`";
}
.prose :where(code):not(:where([class~="not-prose"] *))::after{
  content: "`";
}
.prose :where(a code):not(:where([class~="not-prose"] *)){
  color: inherit;
}
.prose :where(h1 code):not(:where([class~="not-prose"] *)){
  color: inherit;
}
.prose :where(h2 code):not(:where([class~="not-prose"] *)){
  color: inherit;
  font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~="not-prose"] *)){
  color: inherit;
  font-size: 0.9em;
}
.prose :where(h4 code):not(:where([class~="not-prose"] *)){
  color: inherit;
}
.prose :where(blockquote code):not(:where([class~="not-prose"] *)){
  color: inherit;
}
.prose :where(thead th code):not(:where([class~="not-prose"] *)){
  color: inherit;
}
.prose :where(pre):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"] *)){
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::before{
  content: none;
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::after{
  content: none;
}
.prose :where(table):not(:where([class~="not-prose"] *)){
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.prose :where(thead th):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)){
  border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"] *)){
  vertical-align: baseline;
}
.prose :where(tfoot):not(:where([class~="not-prose"] *)){
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}
.prose :where(tfoot td):not(:where([class~="not-prose"] *)){
  vertical-align: top;
}
.prose{
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.prose :where(video):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(figure):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(li):not(:where([class~="not-prose"] *)){
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.prose :where(ol > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.375em;
}
.prose :where(ul > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.375em;
}
.prose :where(.prose > ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}
.prose :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}
.prose :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}
.prose :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}
.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(hr + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}
.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}
.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}
.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}
.prose :where(.prose > :first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(.prose > :last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}
.prose-sm{
  font-size: 0.875rem;
  line-height: 1.7142857;
}
.prose-sm :where(p):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}
.prose-sm :where([class~="lead"]):not(:where([class~="not-prose"] *)){
  font-size: 1.2857143em;
  line-height: 1.5555556;
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}
.prose-sm :where(blockquote):not(:where([class~="not-prose"] *)){
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.1111111em;
}
.prose-sm :where(h1):not(:where([class~="not-prose"] *)){
  font-size: 2.1428571em;
  margin-top: 0;
  margin-bottom: 0.8em;
  line-height: 1.2;
}
.prose-sm :where(h2):not(:where([class~="not-prose"] *)){
  font-size: 1.4285714em;
  margin-top: 1.6em;
  margin-bottom: 0.8em;
  line-height: 1.4;
}
.prose-sm :where(h3):not(:where([class~="not-prose"] *)){
  font-size: 1.2857143em;
  margin-top: 1.5555556em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}
.prose-sm :where(h4):not(:where([class~="not-prose"] *)){
  margin-top: 1.4285714em;
  margin-bottom: 0.5714286em;
  line-height: 1.4285714;
}
.prose-sm :where(img):not(:where([class~="not-prose"] *)){
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}
.prose-sm :where(video):not(:where([class~="not-prose"] *)){
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}
.prose-sm :where(figure):not(:where([class~="not-prose"] *)){
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}
.prose-sm :where(figure > *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}
.prose-sm :where(figcaption):not(:where([class~="not-prose"] *)){
  font-size: 0.8571429em;
  line-height: 1.3333333;
  margin-top: 0.6666667em;
}
.prose-sm :where(code):not(:where([class~="not-prose"] *)){
  font-size: 0.8571429em;
}
.prose-sm :where(h2 code):not(:where([class~="not-prose"] *)){
  font-size: 0.9em;
}
.prose-sm :where(h3 code):not(:where([class~="not-prose"] *)){
  font-size: 0.8888889em;
}
.prose-sm :where(pre):not(:where([class~="not-prose"] *)){
  font-size: 0.8571429em;
  line-height: 1.6666667;
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  border-radius: 0.25rem;
  padding-top: 0.6666667em;
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}
.prose-sm :where(ol):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-left: 1.5714286em;
}
.prose-sm :where(ul):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-left: 1.5714286em;
}
.prose-sm :where(li):not(:where([class~="not-prose"] *)){
  margin-top: 0.2857143em;
  margin-bottom: 0.2857143em;
}
.prose-sm :where(ol > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.4285714em;
}
.prose-sm :where(ul > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.4285714em;
}
.prose-sm :where(.prose-sm > ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}
.prose-sm :where(.prose-sm > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
}
.prose-sm :where(.prose-sm > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.1428571em;
}
.prose-sm :where(.prose-sm > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
}
.prose-sm :where(.prose-sm > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.1428571em;
}
.prose-sm :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}
.prose-sm :where(hr):not(:where([class~="not-prose"] *)){
  margin-top: 2.8571429em;
  margin-bottom: 2.8571429em;
}
.prose-sm :where(hr + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose-sm :where(h2 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose-sm :where(h3 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose-sm :where(h4 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose-sm :where(table):not(:where([class~="not-prose"] *)){
  font-size: 0.8571429em;
  line-height: 1.5;
}
.prose-sm :where(thead th):not(:where([class~="not-prose"] *)){
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}
.prose-sm :where(thead th:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}
.prose-sm :where(thead th:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}
.prose-sm :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
  padding-top: 0.6666667em;
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}
.prose-sm :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}
.prose-sm :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}
.prose-sm :where(.prose-sm > :first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose-sm :where(.prose-sm > :last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}
.prose-light{
  color: #f3f4f6;
}
.prose-light :where(a):not(:where([class~="not-prose"] *)){
  color: #ffffff;
}
.prose-light :where(h1):not(:where([class~="not-prose"] *)){
  color: #ffffff;
}
.prose-light :where(strong):not(:where([class~="not-prose"] *)){
  color: #ffffff;
}
.sr-only{
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.pointer-events-none{
  pointer-events: none;
}
.visible{
  visibility: visible;
}
.static{
  position: static;
}
.fixed{
  position: fixed;
}
.absolute{
  position: absolute;
}
.relative{
  position: relative;
}
.inset-0{
  inset: 0px;
}
.bottom-0{
  bottom: 0px;
}
.bottom-20{
  bottom: 5rem;
}
.bottom-4{
  bottom: 1rem;
}
.left-0{
  left: 0px;
}
.right-0{
  right: 0px;
}
.right-3{
  right: 0.75rem;
}
.right-4{
  right: 1rem;
}
.top-2{
  top: 0.5rem;
}
.z-10{
  z-index: 10;
}
.z-40{
  z-index: 40;
}
.z-50{
  z-index: 50;
}
.z-\[99999\]{
  z-index: 99999;
}
.col-span-1{
  grid-column: span 1 / span 1;
}
.m-0{
  margin: 0px;
}
.mx-auto{
  margin-left: auto;
  margin-right: auto;
}
.my-16{
  margin-top: 4rem;
  margin-bottom: 4rem;
}
.mb-0{
  margin-bottom: 0px;
}
.mb-0\.5{
  margin-bottom: 0.125rem;
}
.mb-2{
  margin-bottom: 0.5rem;
}
.mb-32{
  margin-bottom: 8rem;
}
.mb-5{
  margin-bottom: 1.25rem;
}
.mb-8{
  margin-bottom: 2rem;
}
.ml-1{
  margin-left: 0.25rem;
}
.ml-1\.5{
  margin-left: 0.375rem;
}
.ml-auto{
  margin-left: auto;
}
.mr-0{
  margin-right: 0px;
}
.mr-3{
  margin-right: 0.75rem;
}
.mt-12{
  margin-top: 3rem;
}
.mt-4{
  margin-top: 1rem;
}
.mt-40{
  margin-top: 10rem;
}
.mt-48{
  margin-top: 12rem;
}
.mt-6{
  margin-top: 1.5rem;
}
.mt-8{
  margin-top: 2rem;
}
.block{
  display: block;
}
.inline-block{
  display: inline-block;
}
.flex{
  display: flex;
}
.grid{
  display: grid;
}
.contents{
  display: contents;
}
.hidden{
  display: none;
}
.h-12{
  height: 3rem;
}
.h-20{
  height: 5rem;
}
.h-6{
  height: 1.5rem;
}
.h-8{
  height: 2rem;
}
.h-auto{
  height: auto;
}
.h-full{
  height: 100%;
}
.h-screen{
  height: 100vh;
}
.min-h-\[65vh\]{
  min-height: 65vh;
}
.min-h-screen{
  min-height: 100vh;
}
.w-40{
  width: 10rem;
}
.w-6{
  width: 1.5rem;
}
.w-8{
  width: 2rem;
}
.w-96{
  width: 24rem;
}
.w-full{
  width: 100%;
}
.max-w-4xl{
  max-width: 56rem;
}
.max-w-none{
  max-width: none;
}
.flex-1{
  flex: 1 1 0%;
}
.flex-none{
  flex: none;
}
.\!-translate-y-96{
  --tw-translate-y: -24rem !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}
.\!translate-y-0{
  --tw-translate-y: 0px !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}
.-translate-y-full{
  --tw-translate-y: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-0{
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-16{
  --tw-translate-y: 4rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-8{
  --tw-translate-y: 2rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-full{
  --tw-translate-y: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.transform{
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.animate-rotate-hue{
  animation: huerotation 2s linear infinite;
}
.cursor-pointer{
  cursor: pointer;
}
.grid-cols-1{
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2{
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.flex-row{
  flex-direction: row;
}
.flex-col{
  flex-direction: column;
}
.content-end{
  align-content: flex-end;
}
.items-start{
  align-items: flex-start;
}
.items-center{
  align-items: center;
}
.justify-end{
  justify-content: flex-end;
}
.justify-center{
  justify-content: center;
}
.justify-between{
  justify-content: space-between;
}
.gap-1{
  gap: 0.25rem;
}
.gap-16{
  gap: 4rem;
}
.gap-2{
  gap: 0.5rem;
}
.gap-4{
  gap: 1rem;
}
.gap-8{
  gap: 2rem;
}
.space-y-16 > :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0;
  margin-top: calc(4rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(4rem * var(--tw-space-y-reverse));
}
.overflow-hidden{
  overflow: hidden;
}
.overflow-x-hidden{
  overflow-x: hidden;
}
.rounded{
  border-radius: 0.25rem;
}
.rounded-full{
  border-radius: 9999px;
}
.border{
  border-width: 1px;
}
.border-t{
  border-top-width: 1px;
}
.border-t-4{
  border-top-width: 4px;
}
.border-gray-50{
  --tw-border-opacity: 1;
  border-color: rgb(249 250 251 / var(--tw-border-opacity));
}
.border-white{
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}
.bg-black{
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}
.bg-blue{
  --tw-bg-opacity: 1;
  background-color: rgb(62 45 236 / var(--tw-bg-opacity));
}
.bg-green-400{
  --tw-bg-opacity: 1;
  background-color: rgb(74 222 128 / var(--tw-bg-opacity));
}
.bg-indigo-400{
  --tw-bg-opacity: 1;
  background-color: rgb(129 140 248 / var(--tw-bg-opacity));
}
.bg-indigo-500{
  --tw-bg-opacity: 1;
  background-color: rgb(99 102 241 / var(--tw-bg-opacity));
}
.bg-pink{
  --tw-bg-opacity: 1;
  background-color: rgb(254 205 211 / var(--tw-bg-opacity));
}
.bg-red-400{
  --tw-bg-opacity: 1;
  background-color: rgb(248 113 113 / var(--tw-bg-opacity));
}
.bg-white{
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.bg-yellow-400{
  --tw-bg-opacity: 1;
  background-color: rgb(250 204 21 / var(--tw-bg-opacity));
}
.bg-opacity-60{
  --tw-bg-opacity: 0.6;
}
.bg-gradient-to-tl{
  background-image: linear-gradient(to top left, var(--tw-gradient-stops));
}
.bg-gradient-to-tr{
  background-image: linear-gradient(to top right, var(--tw-gradient-stops));
}
.from-blue{
  --tw-gradient-from: #3e2dec var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(62 45 236 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.to-cyan{
  --tw-gradient-to: #8ff4d7 var(--tw-gradient-to-position);
}
.object-cover{
  -o-object-fit: cover;
     object-fit: cover;
}
.object-center{
  -o-object-position: center;
     object-position: center;
}
.p-2{
  padding: 0.5rem;
}
.px-3{
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.px-4{
  padding-left: 1rem;
  padding-right: 1rem;
}
.px-8{
  padding-left: 2rem;
  padding-right: 2rem;
}
.py-1{
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.py-3{
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.pb-12{
  padding-bottom: 3rem;
}
.pb-16{
  padding-bottom: 4rem;
}
.pt-12{
  padding-top: 3rem;
}
.text-center{
  text-align: center;
}
.text-right{
  text-align: right;
}
.font-serif{
  font-family: Miller Display, ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
}
.text-2xl{
  font-size: 1.5rem;
  line-height: 2rem;
}
.text-3xl{
  font-size: 1.875rem;
  line-height: 2.25rem;
}
.text-4xl{
  font-size: 2.25rem;
  line-height: 2.5rem;
}
.text-5xl{
  font-size: 3rem;
  line-height: 1;
}
.text-lg{
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-sm{
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-xl{
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.font-bold{
  font-weight: 700;
}
.font-semibold{
  font-weight: 600;
}
.lowercase{
  text-transform: lowercase;
}
.\!leading-tight{
  line-height: 1.25 !important;
}
.leading-none{
  line-height: 1;
}
.leading-snug{
  line-height: 1.375;
}
.leading-tight{
  line-height: 1.25;
}
.text-black{
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}
.text-blue{
  --tw-text-opacity: 1;
  color: rgb(62 45 236 / var(--tw-text-opacity));
}
.text-gray-200{
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}
.text-gray-500{
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}
.text-gray-600{
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}
.text-gray-700{
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}
.text-gray-800{
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity));
}
.text-green-50{
  --tw-text-opacity: 1;
  color: rgb(240 253 244 / var(--tw-text-opacity));
}
.text-indigo-50{
  --tw-text-opacity: 1;
  color: rgb(238 242 255 / var(--tw-text-opacity));
}
.text-red-50{
  --tw-text-opacity: 1;
  color: rgb(254 242 242 / var(--tw-text-opacity));
}
.text-white{
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.text-yellow-50{
  --tw-text-opacity: 1;
  color: rgb(254 252 232 / var(--tw-text-opacity));
}
.underline{
  -webkit-text-decoration-line: underline;
          text-decoration-line: underline;
}
.line-through{
  -webkit-text-decoration-line: line-through;
          text-decoration-line: line-through;
}
.no-underline{
  -webkit-text-decoration-line: none;
          text-decoration-line: none;
}
.antialiased{
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.opacity-0{
  opacity: 0;
}
.opacity-80{
  opacity: 0.8;
}
.shadow-lg{
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.outline{
  outline-style: solid;
}
.blur{
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.transition{
  transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-all{
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-none{
  transition-property: none;
}
.transition-transform{
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.\!delay-0{
  transition-delay: 0ms !important;
}
.delay-0{
  transition-delay: 0ms;
}
.delay-200{
  transition-delay: 200ms;
}
.delay-300{
  transition-delay: 300ms;
}
.delay-500{
  transition-delay: 500ms;
}
.delay-700{
  transition-delay: 700ms;
}
.\!duration-0{
  transition-duration: 0ms !important;
}
.duration-1000{
  transition-duration: 1000ms;
}
.duration-300{
  transition-duration: 300ms;
}
.duration-500{
  transition-duration: 500ms;
}
.duration-700{
  transition-duration: 700ms;
}
.duration-\[3500ms\]{
  transition-duration: 3500ms;
}
.duration-\[500ms\]{
  transition-duration: 500ms;
}
.duration-\[600ms\]{
  transition-duration: 600ms;
}
@font-face {
  font-family: "Miller Display";
  src: url(../fonts/Miller-Display-Regular.woff2) format("woff2");
  font-weight: 400;
  font-display: block;
}
@font-face {
  font-family: "Karla";
  src: url(../fonts/Karla-Regular.woff2) format("woff2");
  font-weight: 400;
  font-display: block;
}
@font-face {
  font-family: "Karla";
  src: url(../fonts/Karla-Bold.woff2) format("woff2");
  font-weight: 700;
  font-display: block;
}
.project-template--featured-image{
  display: block;
  width: 100%;
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(249 250 251 / var(--tw-border-opacity));
}
.project-template--featured-image.wp-block-post-featured-image {
  display: none;
}
.project-template--header{
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  border-bottom-width: 1px;
  padding-top: 2rem;
  padding-bottom: 2rem;
}
@media (min-width: 1024px){
  .project-template--header{
    flex-direction: row;
    gap: 2rem;
    padding-top: 3rem;
    padding-bottom: 3rem;
  }
}
@media (min-width: 1536px){
  .project-template--header{
    padding-top: 4rem;
    padding-bottom: 4rem;
  }
}
.project-template--title{
  margin-bottom: 0px !important;
  margin-top: 0px !important;
  font-size: 1.125rem !important;
  line-height: 1.75rem !important;
  font-weight: 600 !important;
  --tw-text-opacity: 1 !important;
  color: rgb(55 65 81 / var(--tw-text-opacity)) !important;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale !important;
}
@media (min-width: 1024px){
  .project-template--title{
    font-size: 1.5rem !important;
    line-height: 2rem !important;
    width: 33.333333%;
  }
  .project-template--header-right{
    width: 66.666667%;
  }
}
.project-template--excerpt{
  margin-bottom: 1.5rem;
  margin-top: -0.125rem;
  font-family: Miller Display, ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
  font-size: 2.25rem;
  line-height: 2.5rem;
  line-height: 1.25;
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
  letter-spacing: 0;
}
@media (min-width: 1024px){
  .project-template--excerpt{
    font-size: 3rem;
    line-height: 1.25;
  }
}
.project-template--excerpt ~ p{
  max-width: 48rem !important;
}

.post-template--featured-image{
  display: block;
  width: 100%;
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(249 250 251 / var(--tw-border-opacity));
}
.post-template--header{
  margin-bottom: 2rem;
  padding-top: 2rem;
  padding-bottom: 2rem;
}
@media (min-width: 1024px){
  .post-template--header{
    padding-top: 3rem;
    padding-bottom: 2rem;
  }
}
@media (min-width: 1536px){
  .post-template--header{
    padding-top: 6rem;
  }
}
.post-template--byline{
  margin-top: 2rem;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}
@media (min-width: 1024px){
  .post-template--byline{
    gap: 1rem;
    font-size: 1rem;
    line-height: 1.5rem;
  }
}
.post-template--byline{
  margin-left: auto;
  margin-right: auto;
  max-width: 48rem;
}
@media (min-width: 1536px){
  .post-template--byline{
    max-width: 56rem;
  }
}
.post-template--author{
  display: flex;
  align-items: center;
  font-weight: 700;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.post-template--author .wp-block-post-author__avatar{
  margin-right: 0.5rem;
}
.post-template--author p{
  margin-top: 0px !important;
  margin-bottom: 0px !important;
}
.post-template--author img{
  width: 1.5rem;
  border-radius: 9999px;
}
@media (min-width: 1024px){
  .post-template--author img{
    width: 2rem;
  }
}
.post-template--author img{
  margin-top: 0px !important;
  margin-bottom: 0px !important;
}
.post-template--author .wp-block-post-author__byline {
  display: none;
}
.post-template--title{
  margin-bottom: 1.5rem !important;
  margin-top: -0.125rem !important;
  font-family: Miller Display, ui-serif, Georgia, Cambria, "Times New Roman", Times, serif !important;
  font-size: 2.25rem !important;
  line-height: 2.5rem !important;
  font-weight: 400 !important;
  line-height: 1.25 !important;
  --tw-text-opacity: 1 !important;
  color: rgb(55 65 81 / var(--tw-text-opacity)) !important;
  letter-spacing: 0 !important;
}
@media (min-width: 1024px){
  .post-template--title{
    font-size: 3rem !important;
    line-height: 1.25 !important;
  }
}
.post-template--title{
  margin-left: auto;
  margin-right: auto;
  max-width: 48rem;
}
@media (min-width: 1536px){
  .post-template--title{
    max-width: 56rem;
  }
}
.post-template--excerpt{
  margin-top: 0px !important;
  margin-bottom: 0px !important;
  font-size: 1.125rem !important;
  line-height: 1.75rem !important;
  font-weight: 600 !important;
  line-height: 1.375 !important;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale !important;
}
@media (min-width: 1024px){
  .post-template--excerpt{
    font-size: 1.5rem !important;
    line-height: 2rem !important;
  }
}
.post-template--excerpt{
  margin-left: auto;
  margin-right: auto;
  max-width: 48rem;
}
@media (min-width: 1536px){
  .post-template--excerpt{
    max-width: 56rem;
  }
}
.post-template--date{
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}
.post-template--date::before {
  content: "        ";
  margin-right: 1rem;
  display: inline-block;
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
  -webkit-text-decoration-line: line-through;
          text-decoration-line: line-through;
}

.wp-block-post-excerpt__more-link {
  display: none;
}

body {
  letter-spacing: -0.025rem;
}

.font-serif {
  letter-spacing: 0;
}

body{
  color: var(--tw-prose-body);
  max-width: 65ch;
}

body :where(p):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

body :where([class~="lead"]):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

body :where(a):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

body :where(strong):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-bold);
  font-weight: 600;
}

body :where(a strong):not(:where([class~="not-prose"] *)){
  color: inherit;
}

body :where(blockquote strong):not(:where([class~="not-prose"] *)){
  color: inherit;
}

body :where(thead th strong):not(:where([class~="not-prose"] *)){
  color: inherit;
}

body :where(ol):not(:where([class~="not-prose"] *)){
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

body :where(ol[type="A"]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-alpha;
}

body :where(ol[type="a"]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-alpha;
}

body :where(ol[type="A" s]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-alpha;
}

body :where(ol[type="a" s]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-alpha;
}

body :where(ol[type="I"]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-roman;
}

body :where(ol[type="i"]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-roman;
}

body :where(ol[type="I" s]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-roman;
}

body :where(ol[type="i" s]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-roman;
}

body :where(ol[type="1"]):not(:where([class~="not-prose"] *)){
  list-style-type: decimal;
}

body :where(ul):not(:where([class~="not-prose"] *)){
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

body :where(ol > li):not(:where([class~="not-prose"] *))::marker{
  font-weight: 400;
  color: var(--tw-prose-counters);
}

body :where(ul > li):not(:where([class~="not-prose"] *))::marker{
  color: var(--tw-prose-bullets);
}

body :where(hr):not(:where([class~="not-prose"] *)){
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

body :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before{
  content: open-quote;
}

body :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after{
  content: close-quote;
}

body :where(h1):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 400;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
  font-family: Miller Display, ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
}

body :where(h1 strong):not(:where([class~="not-prose"] *)){
  font-weight: 900;
  color: inherit;
}

body :where(h2):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

body :where(h2 strong):not(:where([class~="not-prose"] *)){
  font-weight: 800;
  color: inherit;
}

body :where(h3):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

body :where(h3 strong):not(:where([class~="not-prose"] *)){
  font-weight: 700;
  color: inherit;
}

body :where(h4):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

body :where(h4 strong):not(:where([class~="not-prose"] *)){
  font-weight: 700;
  color: inherit;
}

body :where(img):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

body :where(figure > *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}

body :where(figcaption):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

body :where(code):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

body :where(code):not(:where([class~="not-prose"] *))::before{
  content: "`";
}

body :where(code):not(:where([class~="not-prose"] *))::after{
  content: "`";
}

body :where(a code):not(:where([class~="not-prose"] *)){
  color: inherit;
}

body :where(h1 code):not(:where([class~="not-prose"] *)){
  color: inherit;
}

body :where(h2 code):not(:where([class~="not-prose"] *)){
  color: inherit;
  font-size: 0.875em;
}

body :where(h3 code):not(:where([class~="not-prose"] *)){
  color: inherit;
  font-size: 0.9em;
}

body :where(h4 code):not(:where([class~="not-prose"] *)){
  color: inherit;
}

body :where(blockquote code):not(:where([class~="not-prose"] *)){
  color: inherit;
}

body :where(thead th code):not(:where([class~="not-prose"] *)){
  color: inherit;
}

body :where(pre):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

body :where(pre code):not(:where([class~="not-prose"] *)){
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

body :where(pre code):not(:where([class~="not-prose"] *))::before{
  content: none;
}

body :where(pre code):not(:where([class~="not-prose"] *))::after{
  content: none;
}

body :where(table):not(:where([class~="not-prose"] *)){
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

body :where(thead):not(:where([class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

body :where(thead th):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

body :where(tbody tr):not(:where([class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

body :where(tbody tr:last-child):not(:where([class~="not-prose"] *)){
  border-bottom-width: 0;
}

body :where(tbody td):not(:where([class~="not-prose"] *)){
  vertical-align: baseline;
}

body :where(tfoot):not(:where([class~="not-prose"] *)){
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

body :where(tfoot td):not(:where([class~="not-prose"] *)){
  vertical-align: top;
}

body{
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

body :where(video):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

body :where(figure):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

body :where(li):not(:where([class~="not-prose"] *)){
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

body :where(ol > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.375em;
}

body :where(ul > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.375em;
}

body :where(.prose > ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

body :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}

body :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}

body :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}

body :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}

body :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

body :where(hr + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

body :where(h2 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

body :where(h3 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

body :where(h4 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

body :where(thead th:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}

body :where(thead th:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}

body :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

body :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}

body :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}

body :where(.prose > :first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

body :where(.prose > :last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}

@media (min-width: 1024px){
  body{
    font-size: 1.125rem;
    line-height: 1.7777778;
  }
  body :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }
  body :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    font-size: 1.2222222em;
    line-height: 1.4545455;
    margin-top: 1.0909091em;
    margin-bottom: 1.0909091em;
  }
  body :where(blockquote):not(:where([class~="not-prose"] *)){
    margin-top: 1.6666667em;
    margin-bottom: 1.6666667em;
    padding-left: 1em;
  }
  body :where(h1):not(:where([class~="not-prose"] *)){
    font-size: 2.6666667em;
    margin-top: 0;
    margin-bottom: 0.8333333em;
    line-height: 1;
  }
  body :where(h2):not(:where([class~="not-prose"] *)){
    font-size: 1.6666667em;
    margin-top: 1.8666667em;
    margin-bottom: 1.0666667em;
    line-height: 1.3333333;
  }
  body :where(h3):not(:where([class~="not-prose"] *)){
    font-size: 1.3333333em;
    margin-top: 1.6666667em;
    margin-bottom: 0.6666667em;
    line-height: 1.5;
  }
  body :where(h4):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 0.4444444em;
    line-height: 1.5555556;
  }
  body :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }
  body :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }
  body :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }
  body :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }
  body :where(figcaption):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.5;
    margin-top: 1em;
  }
  body :where(code):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
  }
  body :where(h2 code):not(:where([class~="not-prose"] *)){
    font-size: 0.8666667em;
  }
  body :where(h3 code):not(:where([class~="not-prose"] *)){
    font-size: 0.875em;
  }
  body :where(pre):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.75;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.375rem;
    padding-top: 1em;
    padding-right: 1.5em;
    padding-bottom: 1em;
    padding-left: 1.5em;
  }
  body :where(ol):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-left: 1.5555556em;
  }
  body :where(ul):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-left: 1.5555556em;
  }
  body :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.6666667em;
    margin-bottom: 0.6666667em;
  }
  body :where(ol > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4444444em;
  }
  body :where(ul > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4444444em;
  }
  body :where(.lg\:prose-lg > ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }
  body :where(.lg\:prose-lg > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
  }
  body :where(.lg\:prose-lg > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.3333333em;
  }
  body :where(.lg\:prose-lg > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
  }
  body :where(.lg\:prose-lg > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.3333333em;
  }
  body :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }
  body :where(hr):not(:where([class~="not-prose"] *)){
    margin-top: 3.1111111em;
    margin-bottom: 3.1111111em;
  }
  body :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  body :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  body :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  body :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  body :where(table):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.5;
  }
  body :where(thead th):not(:where([class~="not-prose"] *)){
    padding-right: 0.75em;
    padding-bottom: 0.75em;
    padding-left: 0.75em;
  }
  body :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  body :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  body :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
    padding-top: 0.75em;
    padding-right: 0.75em;
    padding-bottom: 0.75em;
    padding-left: 0.75em;
  }
  body :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  body :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  body :where(.lg\:prose-lg > :first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  body :where(.lg\:prose-lg > :last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }
}

@media (min-width: 1280px){
  body{
    font-size: 1.25rem;
    line-height: 1.8;
  }
  body :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }
  body :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    font-size: 1.2em;
    line-height: 1.5;
    margin-top: 1em;
    margin-bottom: 1em;
  }
  body :where(blockquote):not(:where([class~="not-prose"] *)){
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1.0666667em;
  }
  body :where(h1):not(:where([class~="not-prose"] *)){
    font-size: 2.8em;
    margin-top: 0;
    margin-bottom: 0.8571429em;
    line-height: 1;
  }
  body :where(h2):not(:where([class~="not-prose"] *)){
    font-size: 1.8em;
    margin-top: 1.5555556em;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }
  body :where(h3):not(:where([class~="not-prose"] *)){
    font-size: 1.5em;
    margin-top: 1.6em;
    margin-bottom: 0.6666667em;
    line-height: 1.3333333;
  }
  body :where(h4):not(:where([class~="not-prose"] *)){
    margin-top: 1.8em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }
  body :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }
  body :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }
  body :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }
  body :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }
  body :where(figcaption):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
    line-height: 1.5555556;
    margin-top: 1em;
  }
  body :where(code):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
  }
  body :where(h2 code):not(:where([class~="not-prose"] *)){
    font-size: 0.8611111em;
  }
  body :where(h3 code):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
  }
  body :where(pre):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
    line-height: 1.7777778;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.5rem;
    padding-top: 1.1111111em;
    padding-right: 1.3333333em;
    padding-bottom: 1.1111111em;
    padding-left: 1.3333333em;
  }
  body :where(ol):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    padding-left: 1.6em;
  }
  body :where(ul):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    padding-left: 1.6em;
  }
  body :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.6em;
    margin-bottom: 0.6em;
  }
  body :where(ol > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4em;
  }
  body :where(ul > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4em;
  }
  body :where(.xl\:prose-xl > ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }
  body :where(.xl\:prose-xl > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
  }
  body :where(.xl\:prose-xl > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.2em;
  }
  body :where(.xl\:prose-xl > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
  }
  body :where(.xl\:prose-xl > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.2em;
  }
  body :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }
  body :where(hr):not(:where([class~="not-prose"] *)){
    margin-top: 2.8em;
    margin-bottom: 2.8em;
  }
  body :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  body :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  body :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  body :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  body :where(table):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
    line-height: 1.5555556;
  }
  body :where(thead th):not(:where([class~="not-prose"] *)){
    padding-right: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-left: 0.6666667em;
  }
  body :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  body :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  body :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
    padding-top: 0.8888889em;
    padding-right: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-left: 0.6666667em;
  }
  body :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  body :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  body :where(.xl\:prose-xl > :first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  body :where(.xl\:prose-xl > :last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }
}

body {
  max-width: none !important;
  font-family: Karla, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  line-height: 1.5;
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

body .edit-post-visual-editor__post-title-wrapper > :where(:not(.alignleft):not(.alignright)),
body .block-editor-block-list__layout.is-root-container > :where(:not(.alignleft):not(.alignright):not(.alignwide):not(.alignfull)){
  max-width: 48rem !important;
}

@media (min-width: 1536px){
  body .edit-post-visual-editor__post-title-wrapper > :where(:not(.alignleft):not(.alignright)),
body .block-editor-block-list__layout.is-root-container > :where(:not(.alignleft):not(.alignright):not(.alignwide):not(.alignfull)){
    max-width: 56rem !important;
  }
}

.edit-post-visual-editor__post-title-wrapper,
.wp-block-post-excerpt__more-text {
  display: none;
}

.aligncenter{
  margin-left: auto;
  margin-right: auto;
  max-width: 48rem;
}

@media (min-width: 1536px){
  .aligncenter{
    max-width: 56rem;
  }
}

.wp-block-post-featured-image {
  padding-top: 50%;
  position: relative;
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}
.wp-block-post-featured-image .block-editor-media-placeholder{
  position: absolute;
  left: 50%;
  top: 50%;
  max-width: 32rem;
  --tw-translate-x: -50%;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.wp-block-post-featured-image img{
  position: absolute;
  inset: 0px;
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  -o-object-position: center;
     object-position: center;
}
@media (min-width: 768px){
  .md\:prose{
    color: var(--tw-prose-body);
    max-width: 65ch;
  }
  .md\:prose :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .md\:prose :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }
  .md\:prose :where(a):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500;
  }
  .md\:prose :where(strong):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-bold);
    font-weight: 600;
  }
  .md\:prose :where(a strong):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .md\:prose :where(blockquote strong):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .md\:prose :where(thead th strong):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .md\:prose :where(ol):not(:where([class~="not-prose"] *)){
    list-style-type: decimal;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }
  .md\:prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)){
    list-style-type: upper-alpha;
  }
  .md\:prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)){
    list-style-type: lower-alpha;
  }
  .md\:prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)){
    list-style-type: upper-alpha;
  }
  .md\:prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)){
    list-style-type: lower-alpha;
  }
  .md\:prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)){
    list-style-type: upper-roman;
  }
  .md\:prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)){
    list-style-type: lower-roman;
  }
  .md\:prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)){
    list-style-type: upper-roman;
  }
  .md\:prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)){
    list-style-type: lower-roman;
  }
  .md\:prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)){
    list-style-type: decimal;
  }
  .md\:prose :where(ul):not(:where([class~="not-prose"] *)){
    list-style-type: disc;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }
  .md\:prose :where(ol > li):not(:where([class~="not-prose"] *))::marker{
    font-weight: 400;
    color: var(--tw-prose-counters);
  }
  .md\:prose :where(ul > li):not(:where([class~="not-prose"] *))::marker{
    color: var(--tw-prose-bullets);
  }
  .md\:prose :where(hr):not(:where([class~="not-prose"] *)){
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }
  .md\:prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before{
    content: open-quote;
  }
  .md\:prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after{
    content: close-quote;
  }
  .md\:prose :where(h1):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-headings);
    font-weight: 400;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
    font-family: Miller Display, ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
  }
  .md\:prose :where(h1 strong):not(:where([class~="not-prose"] *)){
    font-weight: 900;
    color: inherit;
  }
  .md\:prose :where(h2):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
  }
  .md\:prose :where(h2 strong):not(:where([class~="not-prose"] *)){
    font-weight: 800;
    color: inherit;
  }
  .md\:prose :where(h3):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-headings);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }
  .md\:prose :where(h3 strong):not(:where([class~="not-prose"] *)){
    font-weight: 700;
    color: inherit;
  }
  .md\:prose :where(h4):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
  }
  .md\:prose :where(h4 strong):not(:where([class~="not-prose"] *)){
    font-weight: 700;
    color: inherit;
  }
  .md\:prose :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .md\:prose :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }
  .md\:prose :where(figcaption):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-captions);
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }
  .md\:prose :where(code):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size: 0.875em;
  }
  .md\:prose :where(code):not(:where([class~="not-prose"] *))::before{
    content: "`";
  }
  .md\:prose :where(code):not(:where([class~="not-prose"] *))::after{
    content: "`";
  }
  .md\:prose :where(a code):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .md\:prose :where(h1 code):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .md\:prose :where(h2 code):not(:where([class~="not-prose"] *)){
    color: inherit;
    font-size: 0.875em;
  }
  .md\:prose :where(h3 code):not(:where([class~="not-prose"] *)){
    color: inherit;
    font-size: 0.9em;
  }
  .md\:prose :where(h4 code):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .md\:prose :where(blockquote code):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .md\:prose :where(thead th code):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .md\:prose :where(pre):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: 400;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding-top: 0.8571429em;
    padding-right: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-left: 1.1428571em;
  }
  .md\:prose :where(pre code):not(:where([class~="not-prose"] *)){
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }
  .md\:prose :where(pre code):not(:where([class~="not-prose"] *))::before{
    content: none;
  }
  .md\:prose :where(pre code):not(:where([class~="not-prose"] *))::after{
    content: none;
  }
  .md\:prose :where(table):not(:where([class~="not-prose"] *)){
    width: 100%;
    table-layout: auto;
    text-align: left;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.7142857;
  }
  .md\:prose :where(thead):not(:where([class~="not-prose"] *)){
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }
  .md\:prose :where(thead th):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }
  .md\:prose :where(tbody tr):not(:where([class~="not-prose"] *)){
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }
  .md\:prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)){
    border-bottom-width: 0;
  }
  .md\:prose :where(tbody td):not(:where([class~="not-prose"] *)){
    vertical-align: baseline;
  }
  .md\:prose :where(tfoot):not(:where([class~="not-prose"] *)){
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }
  .md\:prose :where(tfoot td):not(:where([class~="not-prose"] *)){
    vertical-align: top;
  }
  .md\:prose{
    --tw-prose-body: #374151;
    --tw-prose-headings: #111827;
    --tw-prose-lead: #4b5563;
    --tw-prose-links: #111827;
    --tw-prose-bold: #111827;
    --tw-prose-counters: #6b7280;
    --tw-prose-bullets: #d1d5db;
    --tw-prose-hr: #e5e7eb;
    --tw-prose-quotes: #111827;
    --tw-prose-quote-borders: #e5e7eb;
    --tw-prose-captions: #6b7280;
    --tw-prose-code: #111827;
    --tw-prose-pre-code: #e5e7eb;
    --tw-prose-pre-bg: #1f2937;
    --tw-prose-th-borders: #d1d5db;
    --tw-prose-td-borders: #e5e7eb;
    --tw-prose-invert-body: #d1d5db;
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: #9ca3af;
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: #9ca3af;
    --tw-prose-invert-bullets: #4b5563;
    --tw-prose-invert-hr: #374151;
    --tw-prose-invert-quotes: #f3f4f6;
    --tw-prose-invert-quote-borders: #374151;
    --tw-prose-invert-captions: #9ca3af;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: #d1d5db;
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: #4b5563;
    --tw-prose-invert-td-borders: #374151;
    font-size: 1rem;
    line-height: 1.75;
  }
  .md\:prose :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .md\:prose :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .md\:prose :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  .md\:prose :where(ol > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.375em;
  }
  .md\:prose :where(ul > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.375em;
  }
  .md\:prose :where(.md\:prose > ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .md\:prose :where(.md\:prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
  }
  .md\:prose :where(.md\:prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.25em;
  }
  .md\:prose :where(.md\:prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
  }
  .md\:prose :where(.md\:prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.25em;
  }
  .md\:prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .md\:prose :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .md\:prose :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .md\:prose :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .md\:prose :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .md\:prose :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  .md\:prose :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  .md\:prose :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
    padding-top: 0.5714286em;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }
  .md\:prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  .md\:prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  .md\:prose :where(.md\:prose > :first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .md\:prose :where(.md\:prose > :last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }
  .md\:prose-light{
    color: #f3f4f6;
  }
  .md\:prose-light :where(a):not(:where([class~="not-prose"] *)){
    color: #ffffff;
  }
  .md\:prose-light :where(h1):not(:where([class~="not-prose"] *)){
    color: #ffffff;
  }
  .md\:prose-light :where(strong):not(:where([class~="not-prose"] *)){
    color: #ffffff;
  }
}
@media (min-width: 1024px){
  .lg\:prose-lg{
    font-size: 1.125rem;
    line-height: 1.7777778;
  }
  .lg\:prose-lg :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }
  .lg\:prose-lg :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    font-size: 1.2222222em;
    line-height: 1.4545455;
    margin-top: 1.0909091em;
    margin-bottom: 1.0909091em;
  }
  .lg\:prose-lg :where(blockquote):not(:where([class~="not-prose"] *)){
    margin-top: 1.6666667em;
    margin-bottom: 1.6666667em;
    padding-left: 1em;
  }
  .lg\:prose-lg :where(h1):not(:where([class~="not-prose"] *)){
    font-size: 2.6666667em;
    margin-top: 0;
    margin-bottom: 0.8333333em;
    line-height: 1;
  }
  .lg\:prose-lg :where(h2):not(:where([class~="not-prose"] *)){
    font-size: 1.6666667em;
    margin-top: 1.8666667em;
    margin-bottom: 1.0666667em;
    line-height: 1.3333333;
  }
  .lg\:prose-lg :where(h3):not(:where([class~="not-prose"] *)){
    font-size: 1.3333333em;
    margin-top: 1.6666667em;
    margin-bottom: 0.6666667em;
    line-height: 1.5;
  }
  .lg\:prose-lg :where(h4):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 0.4444444em;
    line-height: 1.5555556;
  }
  .lg\:prose-lg :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }
  .lg\:prose-lg :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }
  .lg\:prose-lg :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }
  .lg\:prose-lg :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }
  .lg\:prose-lg :where(figcaption):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.5;
    margin-top: 1em;
  }
  .lg\:prose-lg :where(code):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
  }
  .lg\:prose-lg :where(h2 code):not(:where([class~="not-prose"] *)){
    font-size: 0.8666667em;
  }
  .lg\:prose-lg :where(h3 code):not(:where([class~="not-prose"] *)){
    font-size: 0.875em;
  }
  .lg\:prose-lg :where(pre):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.75;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.375rem;
    padding-top: 1em;
    padding-right: 1.5em;
    padding-bottom: 1em;
    padding-left: 1.5em;
  }
  .lg\:prose-lg :where(ol):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-left: 1.5555556em;
  }
  .lg\:prose-lg :where(ul):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-left: 1.5555556em;
  }
  .lg\:prose-lg :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.6666667em;
    margin-bottom: 0.6666667em;
  }
  .lg\:prose-lg :where(ol > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4444444em;
  }
  .lg\:prose-lg :where(ul > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4444444em;
  }
  .lg\:prose-lg :where(.lg\:prose-lg > ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }
  .lg\:prose-lg :where(.lg\:prose-lg > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
  }
  .lg\:prose-lg :where(.lg\:prose-lg > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.3333333em;
  }
  .lg\:prose-lg :where(.lg\:prose-lg > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
  }
  .lg\:prose-lg :where(.lg\:prose-lg > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.3333333em;
  }
  .lg\:prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }
  .lg\:prose-lg :where(hr):not(:where([class~="not-prose"] *)){
    margin-top: 3.1111111em;
    margin-bottom: 3.1111111em;
  }
  .lg\:prose-lg :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .lg\:prose-lg :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .lg\:prose-lg :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .lg\:prose-lg :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .lg\:prose-lg :where(table):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.5;
  }
  .lg\:prose-lg :where(thead th):not(:where([class~="not-prose"] *)){
    padding-right: 0.75em;
    padding-bottom: 0.75em;
    padding-left: 0.75em;
  }
  .lg\:prose-lg :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  .lg\:prose-lg :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  .lg\:prose-lg :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
    padding-top: 0.75em;
    padding-right: 0.75em;
    padding-bottom: 0.75em;
    padding-left: 0.75em;
  }
  .lg\:prose-lg :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  .lg\:prose-lg :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  .lg\:prose-lg :where(.lg\:prose-lg > :first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .lg\:prose-lg :where(.lg\:prose-lg > :last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }
}
@media (min-width: 1280px){
  .xl\:prose-lg{
    font-size: 1.125rem;
    line-height: 1.7777778;
  }
  .xl\:prose-lg :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }
  .xl\:prose-lg :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    font-size: 1.2222222em;
    line-height: 1.4545455;
    margin-top: 1.0909091em;
    margin-bottom: 1.0909091em;
  }
  .xl\:prose-lg :where(blockquote):not(:where([class~="not-prose"] *)){
    margin-top: 1.6666667em;
    margin-bottom: 1.6666667em;
    padding-left: 1em;
  }
  .xl\:prose-lg :where(h1):not(:where([class~="not-prose"] *)){
    font-size: 2.6666667em;
    margin-top: 0;
    margin-bottom: 0.8333333em;
    line-height: 1;
  }
  .xl\:prose-lg :where(h2):not(:where([class~="not-prose"] *)){
    font-size: 1.6666667em;
    margin-top: 1.8666667em;
    margin-bottom: 1.0666667em;
    line-height: 1.3333333;
  }
  .xl\:prose-lg :where(h3):not(:where([class~="not-prose"] *)){
    font-size: 1.3333333em;
    margin-top: 1.6666667em;
    margin-bottom: 0.6666667em;
    line-height: 1.5;
  }
  .xl\:prose-lg :where(h4):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 0.4444444em;
    line-height: 1.5555556;
  }
  .xl\:prose-lg :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }
  .xl\:prose-lg :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }
  .xl\:prose-lg :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }
  .xl\:prose-lg :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }
  .xl\:prose-lg :where(figcaption):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.5;
    margin-top: 1em;
  }
  .xl\:prose-lg :where(code):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
  }
  .xl\:prose-lg :where(h2 code):not(:where([class~="not-prose"] *)){
    font-size: 0.8666667em;
  }
  .xl\:prose-lg :where(h3 code):not(:where([class~="not-prose"] *)){
    font-size: 0.875em;
  }
  .xl\:prose-lg :where(pre):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.75;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.375rem;
    padding-top: 1em;
    padding-right: 1.5em;
    padding-bottom: 1em;
    padding-left: 1.5em;
  }
  .xl\:prose-lg :where(ol):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-left: 1.5555556em;
  }
  .xl\:prose-lg :where(ul):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-left: 1.5555556em;
  }
  .xl\:prose-lg :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.6666667em;
    margin-bottom: 0.6666667em;
  }
  .xl\:prose-lg :where(ol > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4444444em;
  }
  .xl\:prose-lg :where(ul > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4444444em;
  }
  .xl\:prose-lg :where(.xl\:prose-lg > ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }
  .xl\:prose-lg :where(.xl\:prose-lg > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
  }
  .xl\:prose-lg :where(.xl\:prose-lg > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.3333333em;
  }
  .xl\:prose-lg :where(.xl\:prose-lg > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
  }
  .xl\:prose-lg :where(.xl\:prose-lg > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.3333333em;
  }
  .xl\:prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }
  .xl\:prose-lg :where(hr):not(:where([class~="not-prose"] *)){
    margin-top: 3.1111111em;
    margin-bottom: 3.1111111em;
  }
  .xl\:prose-lg :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .xl\:prose-lg :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .xl\:prose-lg :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .xl\:prose-lg :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .xl\:prose-lg :where(table):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.5;
  }
  .xl\:prose-lg :where(thead th):not(:where([class~="not-prose"] *)){
    padding-right: 0.75em;
    padding-bottom: 0.75em;
    padding-left: 0.75em;
  }
  .xl\:prose-lg :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  .xl\:prose-lg :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  .xl\:prose-lg :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
    padding-top: 0.75em;
    padding-right: 0.75em;
    padding-bottom: 0.75em;
    padding-left: 0.75em;
  }
  .xl\:prose-lg :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  .xl\:prose-lg :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  .xl\:prose-lg :where(.xl\:prose-lg > :first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .xl\:prose-lg :where(.xl\:prose-lg > :last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }
  .xl\:prose-xl{
    font-size: 1.25rem;
    line-height: 1.8;
  }
  .xl\:prose-xl :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }
  .xl\:prose-xl :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    font-size: 1.2em;
    line-height: 1.5;
    margin-top: 1em;
    margin-bottom: 1em;
  }
  .xl\:prose-xl :where(blockquote):not(:where([class~="not-prose"] *)){
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1.0666667em;
  }
  .xl\:prose-xl :where(h1):not(:where([class~="not-prose"] *)){
    font-size: 2.8em;
    margin-top: 0;
    margin-bottom: 0.8571429em;
    line-height: 1;
  }
  .xl\:prose-xl :where(h2):not(:where([class~="not-prose"] *)){
    font-size: 1.8em;
    margin-top: 1.5555556em;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }
  .xl\:prose-xl :where(h3):not(:where([class~="not-prose"] *)){
    font-size: 1.5em;
    margin-top: 1.6em;
    margin-bottom: 0.6666667em;
    line-height: 1.3333333;
  }
  .xl\:prose-xl :where(h4):not(:where([class~="not-prose"] *)){
    margin-top: 1.8em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }
  .xl\:prose-xl :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .xl\:prose-xl :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .xl\:prose-xl :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .xl\:prose-xl :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }
  .xl\:prose-xl :where(figcaption):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
    line-height: 1.5555556;
    margin-top: 1em;
  }
  .xl\:prose-xl :where(code):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
  }
  .xl\:prose-xl :where(h2 code):not(:where([class~="not-prose"] *)){
    font-size: 0.8611111em;
  }
  .xl\:prose-xl :where(h3 code):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
  }
  .xl\:prose-xl :where(pre):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
    line-height: 1.7777778;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.5rem;
    padding-top: 1.1111111em;
    padding-right: 1.3333333em;
    padding-bottom: 1.1111111em;
    padding-left: 1.3333333em;
  }
  .xl\:prose-xl :where(ol):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    padding-left: 1.6em;
  }
  .xl\:prose-xl :where(ul):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    padding-left: 1.6em;
  }
  .xl\:prose-xl :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.6em;
    margin-bottom: 0.6em;
  }
  .xl\:prose-xl :where(ol > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4em;
  }
  .xl\:prose-xl :where(ul > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4em;
  }
  .xl\:prose-xl :where(.xl\:prose-xl > ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }
  .xl\:prose-xl :where(.xl\:prose-xl > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
  }
  .xl\:prose-xl :where(.xl\:prose-xl > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.2em;
  }
  .xl\:prose-xl :where(.xl\:prose-xl > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
  }
  .xl\:prose-xl :where(.xl\:prose-xl > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.2em;
  }
  .xl\:prose-xl :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }
  .xl\:prose-xl :where(hr):not(:where([class~="not-prose"] *)){
    margin-top: 2.8em;
    margin-bottom: 2.8em;
  }
  .xl\:prose-xl :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .xl\:prose-xl :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .xl\:prose-xl :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .xl\:prose-xl :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .xl\:prose-xl :where(table):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
    line-height: 1.5555556;
  }
  .xl\:prose-xl :where(thead th):not(:where([class~="not-prose"] *)){
    padding-right: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-left: 0.6666667em;
  }
  .xl\:prose-xl :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  .xl\:prose-xl :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  .xl\:prose-xl :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
    padding-top: 0.8888889em;
    padding-right: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-left: 0.6666667em;
  }
  .xl\:prose-xl :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  .xl\:prose-xl :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  .xl\:prose-xl :where(.xl\:prose-xl > :first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .xl\:prose-xl :where(.xl\:prose-xl > :last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }
  .xl\:prose-light{
    color: #f3f4f6;
  }
  .xl\:prose-light :where(a):not(:where([class~="not-prose"] *)){
    color: #ffffff;
  }
  .xl\:prose-light :where(h1):not(:where([class~="not-prose"] *)){
    color: #ffffff;
  }
  .xl\:prose-light :where(strong):not(:where([class~="not-prose"] *)){
    color: #ffffff;
  }
}
.hover\:rotate-90:hover{
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.hover\:opacity-100:hover{
  opacity: 1;
}
.focus\:not-sr-only:focus{
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
}
.focus\:outline-white:focus{
  outline-color: #fff;
}
.group:hover .group-hover\:scale-101{
  --tw-scale-x: 1.01;
  --tw-scale-y: 1.01;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.prose-headings\:text-gray-700 :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"] *))){
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}
@media (min-width: 768px){
  .md\:block{
    display: block;
  }
  .md\:inline-flex{
    display: inline-flex;
  }
  .md\:max-w-none{
    max-width: none;
  }
  .md\:text-4xl{
    font-size: 2.25rem;
    line-height: 2.5rem;
  }
}
@media (min-width: 1024px){
  .lg\:right-12{
    right: 3rem;
  }
  .lg\:top-8{
    top: 2rem;
  }
  .lg\:my-24{
    margin-top: 6rem;
    margin-bottom: 6rem;
  }
  .lg\:mb-1{
    margin-bottom: 0.25rem;
  }
  .lg\:inline-block{
    display: inline-block;
  }
  .lg\:grid{
    display: grid;
  }
  .lg\:h-12{
    height: 3rem;
  }
  .lg\:h-20{
    height: 5rem;
  }
  .lg\:h-8{
    height: 2rem;
  }
  .lg\:w-12{
    width: 3rem;
  }
  .lg\:w-2\/3{
    width: 66.666667%;
  }
  .lg\:w-8{
    width: 2rem;
  }
  .lg\:grid-cols-2{
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .lg\:gap-16{
    gap: 4rem;
  }
  .lg\:gap-2{
    gap: 0.5rem;
  }
  .lg\:gap-4{
    gap: 1rem;
  }
  .lg\:gap-x-16{
    column-gap: 4rem;
  }
  .lg\:gap-y-24{
    row-gap: 6rem;
  }
  .lg\:space-y-24 > :not([hidden]) ~ :not([hidden]){
    --tw-space-y-reverse: 0;
    margin-top: calc(6rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(6rem * var(--tw-space-y-reverse));
  }
  .lg\:pb-20{
    padding-bottom: 5rem;
  }
  .lg\:pt-16{
    padding-top: 4rem;
  }
  .lg\:text-2xl{
    font-size: 1.5rem;
    line-height: 2rem;
  }
  .lg\:text-3xl{
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
  .lg\:text-4xl{
    font-size: 2.25rem;
    line-height: 2.5rem;
  }
  .lg\:text-5xl{
    font-size: 3rem;
    line-height: 1;
  }
  .lg\:text-base{
    font-size: 1rem;
    line-height: 1.5rem;
  }
  .lg\:text-lg{
    font-size: 1.125rem;
    line-height: 1.75rem;
  }
  .lg\:leading-snug{
    line-height: 1.375;
  }
  .lg\:leading-tight{
    line-height: 1.25;
  }
  .lg\:text-gray-800{
    --tw-text-opacity: 1;
    color: rgb(31 41 55 / var(--tw-text-opacity));
  }
}
@media (min-width: 1280px){
  .xl\:max-w-7xl{
    max-width: 80rem;
  }
  .xl\:max-w-none{
    max-width: none;
  }
  .xl\:text-6xl{
    font-size: 3.75rem;
    line-height: 1;
  }
}
@media (min-width: 1536px){
  .\32xl\:my-32{
    margin-top: 8rem;
    margin-bottom: 8rem;
  }
  .\32xl\:my-64{
    margin-top: 16rem;
    margin-bottom: 16rem;
  }
  .\32xl\:mt-24{
    margin-top: 6rem;
  }
  .\32xl\:text-3xl{
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
  .\32xl\:text-xl{
    font-size: 1.25rem;
    line-height: 1.75rem;
  }
}
@media (orientation: portrait){
  .portrait\:absolute{
    position: absolute;
  }
  .portrait\:block{
    display: block;
  }
  .portrait\:flex{
    display: flex;
  }
  .portrait\:hidden{
    display: none;
  }
  .portrait\:bg-black{
    --tw-bg-opacity: 1;
    background-color: rgb(0 0 0 / var(--tw-bg-opacity));
  }
  .portrait\:bg-opacity-60{
    --tw-bg-opacity: 0.6;
  }
  .portrait\:text-white{
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
  .portrait\:transition-none{
    transition-property: none;
  }
}
